Instructions for starting containers on docker VM:

$ docker run -d --name jenkins   -p 8080:8080 -p 50000:50000 jenkins

$ docker run -d --name sonarqube -p 9000:9000 -p 9092:9092 sonarqube

$ docker run -d --name tomcat -p 8888:8080 tomcat

$ docker run -d --name artifactory -p 8081:8080 mattgruter/artifactory

$ docker run --name mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql

To start derby database:
------------------------
Open command prompt

cd c:\whereever\db-derby-10.11.1.1-bin\bin

set DERBY_HOME=..\

setNetworkServerCp

startNetworkServer

--------------------------
git clone https://github.com/maruthirj/demo.git
cd demo
git config user.email maruthi@leviossa.com
git config user.name Maruthi

Now copy the contents of your project except the target folder into the demo folder

git add .
git commit -m "Initial commit"
git push

Now download maven. Lets say you unzipped into c:\maven
Run the below command:
c:\maven\bin\mvn package

This should create a target\XXXXXXXXX.war file
Copy target\XXXXXX.war to c:\whereever\apache-tomcat\webapps
cd c:\whereever\apache-tomcat\bin
startup.bat

Now access http://localhost:8080/XXXXXX/rest/user
-----------------------------------
Hibernate integration

Pickup HibernateUtil.java and UserService.java from my github share
Add all dependencies from hibernate project into the web project pom.xml (Make sure there are no duplicates)
Copy hibernate-cfg.xml into src/main/java and Users.hbm.xml into respective project
Go to command line, run mvn package and copy the war file to tomcat 
Test by invoking the urls on postman/browser

CORRECTIONS:

Copy hibernate.cfg.xml to src\main\resources 
copy Users.hbm.xml to src\main\resources\com\mydomain\model (Or whateever your package is)
In the rest service pom xml copy only the following dependency from hibernate:
<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.3.9.Final</version>
		</dependency>
Stop tomcat
Delete teh war and the folder from tomcat\webapps
Run these maven commands:

mvn clean
mvn package
Copy the newly generated war to tomcat\webapps
start tomcat
test

-----------------------

$.get("flights.json", function(data){
		var rowTemplate = $("#templates table").html();
		console.log(rowTemplate);
		for(index in data){
			var row = rowTemplate.replace("flight_no",data[index].flight_no)
						.replace("airline",data[index].airline)
						.replace("capacity",data[index].capacity);
			$("#flights").append(row);
		}
	});

------------------------------

<body>
<div id="templates" style="display: none;">
	<table>
		<tr><td>flight_no</td><td>airline</td><td>capacity</td></tr>
	</table>
</div>
<table id="flights">
<tr><td>Flight No</td><td>Airline</td><td>Capacity</td></tr>
</table>
</body>



























 